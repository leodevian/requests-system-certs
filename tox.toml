requires = [
  "tox>=4.23.2",
  "tox-uv>=1.20.2",
]
env_list = [
  "lint",
  "type",
  "type-tests",
  "docstrings",
  "pkg",
  "3.13",
  "3.12",
  "3.11",
  "3.10",
  "3.9",
  "coverage",
]
labels.tests = [
  "3.13",
  "3.12",
  "3.11",
  "3.10",
  "3.9",
  "coverage",
]

[env_run_base]
description = "Run tests under {env_name}"
package = "wheel"
wheel_build_env = ".pkg"
dependency_groups = [ "tests" ]
set_env = [
  { DISABLE_REQUESTS_SYSTEM_CERTS_PATCH = "1" },
]
commands = [
  [ "coverage", "run", "-m", "pytest", { replace = "posargs", extend = true } ],
]

[env.coverage]
description = "Combine and check coverage"
depends = [
  "3.13",
  "3.12",
  "3.11",
  "3.10",
  "3.9",
]
skip_install = true
dependency_groups = [ "coverage" ]
commands = [
  [ "coverage", "combine" ],
  [ "coverage", "html" ],
  [ "coverage", "report" ],
]

[env.lint]
description = "Run all linters"
skip_install = true
pass_env = [
  "DISABLE_PRE_COMMIT_UV_PATCH",
]
set_env = [
  { FORCE_PRE_COMMIT_UV_PATCH = "1" },
]
dependency_groups = [ "lint" ]
commands = [
  [
    "pre-commit",
    "run",
    "--all-files",
    { replace = "posargs", extend = true },
  ],
]

[env.type]
description = "Type check Python packages"
base_python = [ "3.9" ]
dependency_groups = [ "type" ]
commands = [
  [ "mypy", "src" ],
]

[env.type-tests]
description = "Type check Python tests"
base_python = [ "3.9" ]
dependency_groups = [
  "tests",
  "type",
]
commands = [
  [ "mypy", "tests" ],
]

[env.docstrings]
description = "Check docstring coverage"
skip_install = true
dependency_groups = [ "docstrings" ]
commands = [
  [
    "interrogate",
    "--verbose",
    { replace = "posargs", extend = true },
  ],
]

[env.pkg]
description = "Check the Python package"
skip_install = true
dependency_groups = [ "pkg" ]
commands = [
  [
    "uv",
    "build",
    "--out-dir",
    "{env_tmp_dir}",
  ],
  [
    "check-wheel-contents",
    "--no-config",
    "{env_tmp_dir}",
  ],
  [
    "twine",
    "check",
    "--strict",
    "{env_tmp_dir}{/}*",
  ],
]

[env.release]
description = "Prepare a new release"
skip_install = true
dependency_groups = [ "release" ]
commands = [
  [
    "python",
    "{tox_root}{/}scripts{/}release.py",
    { replace = "posargs", extend = true },
  ],
]
